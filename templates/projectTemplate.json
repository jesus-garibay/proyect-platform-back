{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "",
  "Parameters": {
    "AppName": {
      "Type": "String",
      "Description": "App Name",
      "Default": "lendingplatformback"
    },
    "Environment": {
      "Type": "String",
      "Description": "Environment name."
    },
    "NetworkStackParameter": {
      "Type": "String",
      "Description": "The stack name for get all network configuration.",
      "Default": "VPCLendingPlatform"
    },
    "cognitoStackParameter": {
      "Type": "String",
      "Description": "The stack name for get cognito configuration.",
      "Default": ""
    },
    "ArtifactsBucket": {
      "Type": "String",
      "Description": "Bucket where all artifacts will be saved.",
      "Default": ""
    },
    "LambdaSecurityGroup": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Description": "security group para lam.",
      "Default": "/config/infra/connector/security_group"
    },
    "PrivateSubnets": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Description": "security group para lam.",
      "Default": "/config/infra/connector/private_subnet"
    },
    "NetworkStackName": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Description": "security group para lam.",
      "Default": "/config/infra/lending/networking-stack-name"
    },
    "MambuAccount": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Description": "Account number to MAMBU",
      "Default": "/config/account/mambu"
    }
  },
  "Resources": {
    "ROLlendingplatformbackLambda": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": {
          "Fn::Sub": "${Environment}-lambda-executionRol"
        },
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": "*"
                }
              ]
            },
            "PolicyName": {
              "Fn::Sub": "${Environment}-${AppName}-lambdaLogPermission"
            }
          },
          {
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "ec2:DescribeNetworkInterfaces",
                    "ec2:CreateNetworkInterface",
                    "ec2:DeleteNetworkInterface",
                    "ec2:DescribeInstances",
                    "ec2:AttachNetworkInterface"
                  ],
                  "Resource": "*"
                }
              ]
            },
            "PolicyName": {
              "Fn::Sub": "${Environment}-${AppName}-lambdaVpcPermission"
            }
          },
          {
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Sid": "ReadWriteTable",
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:BatchGetItem",
                    "dynamodb:GetItem",
                    "dynamodb:Query",
                    "dynamodb:Scan",
                    "dynamodb:BatchWriteItem",
                    "dynamodb:PutItem",
                    "dynamodb:UpdateItem",
                    "dynamodb:ExportTableToPointInTime",
                    "dynamodb:DeleteItem"
                  ],
                  "Resource": "*"
                }
              ]
            },
            "PolicyName": {
              "Fn::Sub": "${Environment}-${AppName}-lambdaDynamoPermission"
            }
          },
          {
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Sid": "Invoke",
                  "Effect": "Allow",
                  "Action": [
                    "lambda:InvokeFunction",
                    "lambda:InvokeAsync"
                  ],
                  "Resource": "*"
                }
              ]
            },
            "PolicyName": {
              "Fn::Sub": "${Environment}-${AppName}-lambdaInvokePermission"
            }
          },
          {
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:GetRecords",
                    "dynamodb:GetShardIterator",
                    "dynamodb:DescribeStream",
                    "dynamodb:ListShards",
                    "dynamodb:ListStreams"
                  ],
                  "Resource": "*"
                }
              ]
            },
            "PolicyName": {
              "Fn::Sub": "${Environment}-${AppName}-lambdaKinesisPermission"
            }
          },
          {
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "ssm:GetParameters",
                    "ssm:GetParameter"
                  ],
                  "Resource": "*"
                }
              ]
            },
            "PolicyName": {
              "Fn::Sub": "${Environment}-${AppName}-lambdaParameterPermission"
            }
          },
          {
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "secretsmanager:GetResourcePolicy",
                    "secretsmanager:GetSecretValue",
                    "secretsmanager:DescribeSecret",
                    "secretsmanager:ListSecretVersionIds"
                  ],
                  "Resource": "*"
                }
              ]
            },
            "PolicyName": {
              "Fn::Sub": "${Environment}-${AppName}-lambdaSecretManagerPermission"
            }
          },
          {
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "sts:AssumeRole"
                  ],
                  "Resource": [
                    "arn:aws:iam::296164203735:role/service-role/roleName"
                  ]
                }
              ]
            },
            "PolicyName": {
              "Fn::Sub": "${Environment}-${AppName}-lambdaAssumeRolePermission"
            }
          },
          {
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:PutObject",
                    "s3:PutObjectAcl",
                    "s3:GetObject",
                    "s3:GetObjectAcl",
                    "s3:DeleteObject",
                    "s3:ListAllMyBuckets",
                    "s3:GetBucketLocation",
                    "s3:GetObjectVersion",
                    "s3:DeleteObjectVersion",
                    "s3:ListBucket"
                  ],
                  "Resource": "*"
                }
              ]
            },
            "PolicyName": {
              "Fn::Sub": "${Environment}-${AppName}-lambdaBucketPermission"
            }
          },
          {
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "sqs:*"
                  ],
                  "Resource": "*"
                }
              ]
            },
            "PolicyName": {
              "Fn::Sub": "${Environment}-${AppName}-lambdaSqsPermission"
            }
          },
          {
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "cognito-idp:AdminCreateUser",
                    "cognito-idp:AdminSetUserPassword",
                    "cognito-idp:AdminUpdateUserAttributes"
                  ],
                  "Resource": "*"
                }
              ]
            },
            "PolicyName": {
              "Fn::Sub": "${Environment}-${AppName}-lambdaCognitoPermission"
            }
          }
        ]
      }
    },
    "ROLlendingplatformbackApi": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "lambda:InvokeFunction",
                  "Resource": "*"
                }
              ]
            },
            "PolicyName": {
              "Fn::Sub": "${Environment}-${AppName}-ApiInvokeLambdaPermission"
            }
          },
          {
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:DescribeLogGroups",
                    "logs:DescribeLogStreams",
                    "logs:PutLogEvents",
                    "logs:GetLogEvents",
                    "logs:FilterLogEvents"
                  ],
                  "Resource": "*"
                }
              ]
            },
            "PolicyName": {
              "Fn::Sub": "${Environment}-${AppName}-ApiLogPermission"
            }
          }
        ]
      }
    },
    "APIG": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Body": {
          "Fn::Transform": {
            "Name": "AWS::Include",
            "Parameters": {
              "Location": {
                "Fn::Sub": "s3://${ArtifactsBucket}/api.json"
              }
            }
          }
        },
        "Name": {
          "Fn::Sub": "${Environment}-${AppName}"
        },
        "Parameters": {
          "endpointConfigurationTypes": "REGIONAL"
        }
      }
    },
    "DAPIGlendingplatformback": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "APIG"
        }
      },
      "DeletionPolicy": "Retain"
    },
    "SAPIGlendingplatformback": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "RestApiId": {
          "Ref": "APIG"
        },
        "DeploymentId": {
          "Ref": "DAPIGlendingplatformback"
        },
        "StageName": {
          "Ref": "Environment"
        }
      }
    },
    "UP": {
      "Type": "AWS::ApiGateway::UsagePlan",
      "Properties": {
        "ApiStages": [
          {
            "ApiId": {
              "Ref": "APIG"
            },
            "Stage": {
              "Ref": "SAPIGlendingplatformback"
            }
          }
        ],
        "Description": "Custom lendingplatformback usage plan",
        "Quota": {
          "Limit": 5000,
          "Period": "MONTH"
        },
        "Throttle": {
          "BurstLimit": 200,
          "RateLimit": 100
        },
        "UsagePlanName": {
          "Fn::Sub": "${Environment}-${AppName}-Plan"
        }
      }
    },
    "KAPIGlendingplatformback": {
      "Type": "AWS::ApiGateway::ApiKey",
      "DependsOn": [
        "DAPIGlendingplatformback",
        "APIG"
      ],
      "Properties": {
        "Name": {
          "Fn::Sub": "${Environment}-${AppName}-ApiKey"
        },
        "Description": "CloudFormation API Key V1",
        "Enabled": true,
        "StageKeys": [
          {
            "RestApiId": {
              "Ref": "APIG"
            },
            "StageName": {
              "Ref": "SAPIGlendingplatformback"
            }
          }
        ]
      }
    },
    "UPK": {
      "Type": "AWS::ApiGateway::UsagePlanKey",
      "Properties": {
        "KeyId": {
          "Ref": "KAPIGlendingplatformback"
        },
        "KeyType": "API_KEY",
        "UsagePlanId": {
          "Ref": "UP"
        }
      }
    },
    "LYSlendingplatformbackCore": {
      "Type": "AWS::Lambda::LayerVersion",
      "Properties": {
        "CompatibleRuntimes": [
          "python3.9"
        ],
        "Content": "../src/layers/core",
        "LayerName": {
          "Fn::Sub": "${Environment}-${AppName}-core"
        }
      }
    }
  },
  "Outputs": {
    "ApiLendingID": {
      "Description": "The ID of the Api",
      "Value": {
        "Ref": "APIG"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "ApiGWID-${AppName}-${Environment}"
        }
      }
    }
  }
}
